{"version":3,"sources":["store/index.js","components/RepositoryInfo.js","components/SearchResult.js","api/GithubSearch.js","actions/index.js","components/KeywordInput.js","components/SortSelection.js","components/OrderSelection.js","components/SearchBox.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["initialState","sort","key","order","repositories","reducer","state","action","type","Object","objectSpread","payload","Store","React","createContext","StoreProvider","props","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","value","dispatch","react_default","a","createElement","Provider","children","withStyles","card","margin","secondly","display","alignItems","& div","paddingRight","verticalAlign","icon","position","top","fontSize","classes","data","Card_default","className","elevation","CardContent_default","Typography_default","variant","gutterBottom","Link_default","href","html_url","target","rel","full_name","description","component","updated_at","Icon_default","stargazers_count","language","SearchResult","compare","name","direction","comparison","current","next","createCompare","items","map","item","components_RepositoryInfo","id","fetchRepository","_ref","asyncToGenerator","regenerator_default","mark","_callee","keyword","sendQuery","res","result","wrap","_context","prev","concat","fetch","sent","json","abrupt","t0","stop","_x","apply","this","arguments","GithubSearch","search","_x2","input","flexGrow","button","padding","_React$useState","useState","_React$useState2","setKeyword","useContext","Fragment","TextField_default","label","onChange","e","Button_default","color","disabled","onClick","SortSelection","_React$useContext","RadioGroup_default","sortKey","setSortKey","row","FormControlLabel_default","control","Radio_default","setSortOrder","root","textContainer","justifyContent","Paper_default","Grid_default","container","spacing","xs","components_KeywordInput","components_SortSelection","OrderSelection","components_SearchBox","components_SearchResult","App","CssBaseline_default","store_StoreProvider","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd1735d4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst initialState = {\n  sort: {\n    key: 'stargazers_count',\n    order: 'desc'\n  },\n  repositories: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_REPOSITORY':\n      return { ...state, repositories: action.payload };\n    case 'SET_SORT':\n      return {\n        ...state,\n        sort: { ...state.sort, ...action.payload }\n      };\n    default:\n      return state;\n  }\n}\n\nexport const Store = React.createContext();\nexport const StoreProvider = props => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n};\n\nStoreProvider.propTypes = {\n  children: PropTypes.object.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Icon from '@material-ui/core/Icon';\n\nconst styles = {\n  card: {\n    margin: '10px 0',\n  },\n  secondly: {\n    display: 'flex',\n    alignItems: 'center',\n\n    \"& div\": {\n      paddingRight: '20px',\n      verticalAlign: 'middle'\n    }\n  },\n  icon: {\n    position: \"relative\",\n    top: 3,\n    fontSize: 18\n  }\n};\n\nconst RepositoryInfo = props => {\n  const { classes, data } = props;\n  return (\n    <Card className={classes.card} elevation={3}>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          <Link href={data.html_url} target=\"_blank\" rel=\"noopener\">\n            {data.full_name}\n          </Link>\n        </Typography>\n        <Typography variant=\"subtitle1\">\n          {data.description}\n        </Typography>\n        <Typography variant=\"subtitle2\" className={classes.secondly}>\n          <Typography component='div'>\n            Updated on {data.updated_at}\n          </Typography>\n          <Typography component='div'>\n            <Icon className={classes.icon}>star</Icon>\n            {data.stargazers_count}\n          </Typography>\n          <Typography component='div'>\n            {data.language}\n          </Typography>\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n};\n\nRepositoryInfo.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(RepositoryInfo);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RepositoryInfo from '../components/RepositoryInfo';\n\nconst createCompare = (name, direction) => {\n  const comparison = (direction === 'asc') ? 1 : -1;\n  return (current, next) => {\n    if (current[name] < next[name]) {\n      return -comparison;\n    } else if (current[name] > next[name]) {\n      return comparison;\n    } else {\n      return 0;\n    }\n  }\n};\n\nconst SearchResult = props => {\n  const { repositories, sort } = props;\n  const compare = createCompare(sort.key, sort.order);\n  const items = repositories\n    .sort(compare)\n    .map(item => <RepositoryInfo key={item.id} data={item} />);\n\n  return (\n    <div>\n      {items}\n    </div>\n  );\n};\n\nSearchResult.propTypes = {\n  repositories: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n};\nexport default SearchResult;","const fetchRepository = async keyword => {\n  const sendQuery = `https://api.github.com/search/repositories?q=${keyword}+in:name`;\n  try {\n    const res = await fetch(sendQuery);\n    const result = await res.json();\n    return result.items;\n  } catch (error) {\n    // todo エラーを別途通知したい\n    return [];\n  }\n}\n\nconst GithubSearch = () => {\n  return {\n    fetchRepository: function (keyword) {\n      return fetchRepository(keyword);\n    }\n  };\n};\n\nexport default GithubSearch;","import GithubSearch from '../api/GithubSearch';\n\nexport const search = async (keyword, dispatch) => {\n  const result = await GithubSearch().fetchRepository(keyword);\n  dispatch({\n    type: 'SET_REPOSITORY',\n    payload: result\n  });\n};\n\nexport const setSortKey = (sortKey, dispatch) => {\n  dispatch({\n    type: 'SET_SORT',\n    payload: {key: sortKey}\n  });\n};\n\nexport const setSortOrder = (order, dispatch) => {\n  dispatch({\n    type: 'SET_SORT',\n    payload: {order: order}\n  });\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Store } from '../store';\nimport { search } from '../actions';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  input: {\n    flexGrow: 1,\n    paddingRight: 20\n  },\n  button: {\n    padding: 10,\n  },\n};\n\nconst KeywordInput = props => {\n  const { classes } = props;\n  const [keyword, setKeyword] = React.useState('');\n  const { dispatch } = React.useContext(Store);\n  const isEmpty = () => keyword === '';\n\n  return (\n    <>\n      <TextField label=\"Keyword\" className={classes.input} value={keyword} onChange={e => setKeyword(e.target.value)} />\n      <Button variant=\"contained\" color=\"primary\" className={classes.button} disabled={isEmpty()} onClick={() => search(keyword, dispatch)}>\n        Search\n      </Button>\n    </>\n  );\n};\n\nKeywordInput.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(KeywordInput);","import React from 'react';\nimport { Store } from '../store';\nimport { setSortKey } from '../actions';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\n\nconst SortSelection = () => {\n  const { state, dispatch } = React.useContext(Store);\n\n  return (\n    <>\n      <Typography variant=\"caption\">Sort by</Typography>\n      <RadioGroup\n        name=\"sortKeyRadio\"\n        value={state.sort.key}\n        onChange={e => setSortKey(e.target.value, dispatch)}\n        row\n      >\n        <FormControlLabel value=\"stargazers_count\" control={<Radio />} label=\"Star\" />\n        <FormControlLabel value=\"updated_at\" control={<Radio />} label=\"Updated\" />\n      </RadioGroup>\n    </>\n  );\n};\n\nexport default SortSelection;","import React from 'react';\nimport { Store } from '../store';\nimport { setSortOrder } from '../actions';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\n\nconst SortSelection = () => {\n  const { state, dispatch } = React.useContext(Store);\n\n  return (\n    <>\n      <Typography variant=\"caption\">Order by</Typography>\n      <RadioGroup\n        name=\"orderRadio\"\n        value={state.sort.order}\n        onChange={e => setSortOrder(e.target.value, dispatch)}\n        row\n      >\n        <FormControlLabel value=\"asc\" control={<Radio />} label=\"ASC\" />\n        <FormControlLabel value=\"desc\" control={<Radio />} label=\"DESC\" />\n      </RadioGroup>\n    </>\n  );\n};\n\nexport default SortSelection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeywordInput from './KeywordInput';\nimport SortSelection from './SortSelection';\nimport OrderSelection from './OrderSelection';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    padding: '10px 20px',\n  },\n  textContainer: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  input: {\n    flexGrow: 1,\n    paddingRight: 20\n  },\n  button: {\n    padding: 10,\n  },\n};\n\nconst SearchBox = props => {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <Grid container spacing={24}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Search the repository from Github.</Typography>\n          <Typography variant=\"body1\">Get up to 30 repositories with matching keywords and names.</Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.textContainer}>\n          <KeywordInput />\n        </Grid>\n        <Grid item xs={9}>\n          <SortSelection />\n        </Grid>\n        <Grid item xs={3}>\n          <OrderSelection />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n\n}\n\nSearchBox.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchBox);","import React from 'react';\nimport { Store } from '../store';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport SearchResult from '../components/SearchResult';\nimport SearchBox from '../components/SearchBox';\n\nconst styles = {\n  root: {\n    padding: '10px 20px',\n  },\n};\n\nconst Main = props => {\n  const { classes } = props;\n  const { state } = React.useContext(Store);\n\n  return (\n    <div className={classes.root}>\n      <SearchBox />\n      <SearchResult repositories={state.repositories} sort={state.sort} />\n    </div>\n  );\n};\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { StoreProvider } from './store';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Main from './components/Main';\n\nconst App = () => {\n  return (\n    <>\n      <CssBaseline />\n      <StoreProvider>\n        <Main />\n      </StoreProvider>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}